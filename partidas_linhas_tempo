from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from bs4 import BeautifulSoup as bs
import pandas as pd
import time
import re

#Instalação do Web Driver (robô) para o Chrome
servico = Service(ChromeDriverManager().install())

#Para abrir o browser
navegador = webdriver.Chrome(service=servico)

#Criando uma lista para armazenar os dados
dados_partidas = []
links_partidas = []   

#Links da página das partidas de cada copa
url_partidas_copas = ['https://www.fifa.com/tournaments/mens/worldcup/2018russia/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/2014brazil/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/2010south-africa/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/2006germany/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/2002korea-japan/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1998france/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1994usa/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1990italy/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1986mexico/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1982spain/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1978argentina/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1974germany/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1970mexico/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1966england/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1962chile/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1958sweden/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1954switzerland/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1950brazil/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1938france/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1934italy/match-center', 'https://www.fifa.com/tournaments/mens/worldcup/1930uruguay/match-center']

#Acessando o site do Fifa
for url_partidas in url_partidas_copas:
    navegador.get(url_partidas)
    time.sleep(1)

    #Clicando no botão para aceitar os cookies
    try:
        navegador.find_element('xpath', '//*[@id="onetrust-accept-btn-handler"]').click()
    
        time.sleep(1)
    except:
        pass
    
    #Testando se existe o botão das partidas de grupos, para então clicar nele
    try:
        fase_grupo = navegador.find_element('xpath', '//*[@id="content"]/div/div[3]/div[1]/div/div/div[1]/div[2]/div[2]').click()
        time.sleep(1)
    except:
        pass

    #Coletando o html
    site_partidas = bs(navegador.page_source, 'html.parser')
    
    #Ano e sede da copa
    info_copa_tm = site_partidas.find('title').get_text().strip()
    qtde_letras_1 = len(info_copa_tm)
    info_copa = info_copa_tm[:qtde_letras_1-1]
    ano = info_copa[:4]
    sede_copa_cup = info_copa.find('Cup')
    sede_copa = info_copa[sede_copa_cup+4:]
    
    #Encontrando o bloco html que contém as partidas por data
    todas_rodadas = site_partidas.find_all('div', attrs={'class': re.compile('fp-accordion-card_accordionCard_.*')})
    
    #Deixando em loop para coletar as informações no bloco maior e coletar o link
    for todas_partidas in todas_rodadas:
        
        #Coletando Data ou Rodada
        data_rodada = todas_partidas.find('p', attrs={re.compile('ff-mb-0 fp-accordion-card_accordionTitle_.*')})
    
        #Coletando o link da partida
        partidas = todas_partidas.find_all('a')
        
        #Deixando em loop para agora coletar as informações de cada partida
        for partida in partidas:
            
            #Detalhes da Partida - Data # Estádio # Grupo # Partida
            caracteristicas = partida.find('div', attrs={'class': re.compile('d-none d-md-inline col fp-match-overview_tournamentDetails_.*')}).find_all('li')
            detalhes_partida = '#'.join([detalhe.text for detalhe in caracteristicas])

            #Selecoes e Placar da Partida
            selecoes = partida.find_all('h4')
            selecoes_partida = '#'.join([detalhe.text for detalhe in selecoes])
        
            #Coletar a informacao do jogo, se teve tempo extra ou penaltis
            observacao_html = partida.find('p')
        
            #Coletar o link da partida
            link = partida['href']
        
            placar_penalty = ''
        
            #Adicionando os dados numa tabela
            if (observacao_html):
                observacao = observacao_html.get_text().strip()
                if '-' in observacao:
                    placar_penalty_pos = observacao.find('-')
                    placar_penalty = observacao[placar_penalty_pos-2:placar_penalty_pos+3]

                else:
                    placar_penalty = ''
                
                dados_partidas.append([detalhes_partida, data_rodada.text, selecoes_partida, observacao, placar_penalty, 'https://www.fifa.com'+link, info_copa, ano, sede_copa])
            else:
                dados_partidas.append([detalhes_partida, data_rodada.text, selecoes_partida, '', '', 'https://www.fifa.com'+link, info_copa, ano, sede_copa])
            
            links_partidas.append(['https://www.fifa.com'+link])          

    #Testando se existe o botão das partidas da fase de eliminatorias, para então clicar nele
    try:
        fase_eliminatorias = navegador.find_element('xpath', '//*[@id="content"]/div/div[3]/div[1]/div/div/div[1]/div[2]/div[1]').click()

        time.sleep(2)

        #Coletando o html
        site_partidas2 = bs(navegador.page_source, 'html.parser')

        #Encontrando o bloco html que contém as partidas por data
        todas_rodadas2 = site_partidas2.find_all('div', attrs={'class': re.compile('fp-accordion-card_accordionCard_.*')})

        #Deixando em loop para coletar as informações no bloco maior e coletar o link
        for todas_partidas2 in todas_rodadas2:

            #Coletando Data ou Rodada
            data_rodada2 = todas_partidas2.find('p', attrs={re.compile('ff-mb-0 fp-accordion-card_accordionTitle_.*')})

            #Coletando o link da partida
            partidas2 = todas_partidas2.find_all('a')

            #Deixando em loop para agora coletar as informações de cada partida
            for partida2 in partidas2:

                #Detalhes da Partida - Data # Estádio # Grupo # Partida
                caracteristicas2 = partida2.find('div', attrs={'class': re.compile('d-none d-md-inline col fp-match-overview_tournamentDetails_.*')}).find_all('li')
                detalhes_partida2 = '#'.join([detalhe.text for detalhe in caracteristicas2])

                #Selecoes e Placar da Partida
                selecoes2 = partida2.find_all('h4')
                selecoes_partida2 = '#'.join([detalhe.text for detalhe in selecoes2])

                #Coletar a informacao do jogo, se teve tempo extra ou penaltis
                observacao_html1 = partida2.find('p')

                #Coletar o link da partida
                link2 = partida2['href']

                #Adicionando os dados numa tabela
                if (observacao_html1):
                    observacao2 = observacao_html1.get_text().strip()
                    if '-' in observacao2:
                        placar_penalty_pos2 = observacao2.find('-')
                        placar_penalty1 = observacao2[placar_penalty_pos2-2:placar_penalty_pos2+3]

                    else:
                        placar_penalty1 = ''
                    dados_partidas.append([detalhes_partida2, data_rodada2.text, selecoes_partida2, observacao2, placar_penalty1, 'https://www.fifa.com'+link2, info_copa, ano, sede_copa])               
                else:
                    dados_partidas.append([detalhes_partida2, data_rodada2.text, selecoes_partida2, '', '', 'https://www.fifa.com'+link2, info_copa, ano, sede_copa])

                links_partidas.append(['https://www.fifa.com'+link2])

    except:
        pass

#Criando uma lista para armazenar os dados
dados_linha_tempo = []

for url_partida in links_partidas:
    link_partida = str(url_partida)
    qtde_letras = len(link_partida)
    url_limpo = link_partida[2:qtde_letras-2].strip() 
           
    navegador.get(url_limpo)
    time.sleep(1)
    
    #Testando se existe o botão da timeline, para então clicar nele
    timeline_botao = navegador.find_element('xpath', '//*[@id="content"]/div/div[2]/div/div/div[1]/div[2]')
    try:
        timeline_botao.click()
    except:
        pass

    time.sleep(2)

    #Coletando o html
    site = bs(navegador.page_source, 'html.parser')

    #Ano e sede da copa
    info_copa_partida = site.find('title').get_text().strip()
    dois_pontos_info = info_copa_partida.find(':')
    info_copa = info_copa_partida[:dois_pontos_info-1]
    sede_copa_cup = info_copa.find('Cup')
    sede_copa = info_copa[sede_copa_cup+4:]
    ano = info_copa[:4]

    #Bloco html das infos da partida
    infos_partida = site.find('div', attrs={'class': re.compile('fp-result-board_resultRowOuter__.*')})
    placar_html = infos_partida.find('div', attrs={'class': re.compile('fp-result-board_result__.*')})

    #Extrair a equipe da casa
    equipe_casa = infos_partida.find_all('h3')[1]

    #Extrair o placar equipe da casa
    placar_casa = placar_html.find('div', attrs={'class': re.compile('fp-result-board_score__.*')})

    #Extrair a equipe visitante
    equipe_visitante = infos_partida.find_all('h3')[-1]

    #Extrair o placar equipe visitante
    placar_visitante = placar_html.find_all('div')[-1]

    #Extrair as infos da partida
    info_partida2 = infos_partida.find('div', attrs={'class': re.compile('fp-result-board_detailsRow__.*')}).get_text().strip()
    info_partida = info_partida2[18:]

    #Concatenar a partida
    partida = equipe_casa.text+' '+placar_casa.text+' - '+placar_visitante.text+' '+equipe_visitante.text
    
    #Extraindo o bloco html com a linha do tempo
    linha_tempo_html = site.find_all('div', attrs={'class': 'col'})[1]

    #Extraindo o html de cada linha
    eventos = linha_tempo_html.find_all('div', attrs={'class': re.compile('fp-timeline-event_event__.*')})

    #Deixando em loop para coletar as informações de cada linha
    for evento in eventos:

        #Extraindo o minuto do evento
        minuto_evento = evento.find('h6', attrs={'class': re.compile('fp-timeline-event_eventTime_.*')})

        #Extraindo o texto que identifica o evento
        tipo_evento_fifa = evento.find('p', attrs={'class': re.compile('p-large fp-timeline-event_bold__.*')}).get_text().strip()

        #Extraindo a selação do jogador que levou o cartão
        selecao_cartao = evento.find_all('p')[-1].get_text().strip()

        if 'Substitution' in tipo_evento_fifa:
            tipo_evento = 'Substituição'

            selecao = tipo_evento_fifa[17:]

            jogador_substituido_linha = evento.find_all('div', attrs={'class': 'd-flex align-items-middle'})[0]
            jogador_substituido = jogador_substituido_linha.find_all('span')[0]
            jogador_substituido_nome = ' '.join([nome_j.text for nome_j in jogador_substituido])

            dados_linha_tempo.append([tipo_evento, 'Saiu', minuto_evento.text, jogador_substituido_nome, selecao, partida, info_partida, info_copa, ano, sede_copa])

            jogador_substituto_linha = evento.find_all('div', attrs={'class': 'd-flex align-items-middle'})[1]
            jogador_substituto = jogador_substituto_linha.find_all('span')[0]
            jogador_substituto_nome = ' '.join([nome_j.text for nome_j in jogador_substituto])

            dados_linha_tempo.append([tipo_evento, 'Entrou', minuto_evento.text, jogador_substituto_nome, selecao, partida, info_partida, info_copa, ano, sede_copa])

        elif 'card' in tipo_evento_fifa:
            tipo_evento = 'Cartão'

            posicao = tipo_evento_fifa.find('card')
            complemento_evento = tipo_evento_fifa[:posicao-1]

            posicao_1 = selecao_cartao.find('(')
            posicao_2 = selecao_cartao.find(')')
            selecao = selecao_cartao[posicao_1+1:posicao_2]

            jogador_linha = evento.find_all('p')[1].get_text().strip()
            posicao_3 = jogador_linha.find('(')
            jogador = jogador_linha[:posicao_3-1]

            dados_linha_tempo.append([tipo_evento, complemento_evento, minuto_evento.text, jogador, selecao, partida, info_partida, info_copa, ano, sede_copa])

        elif equipe_casa.text in tipo_evento_fifa:
            tipo_evento = 'Gol'

            marcador_linha = evento.find_all('p')[1].get_text().strip()

            posicao_4 = marcador_linha.find('(')
            posicao_5 = marcador_linha.find(')')                 
            selecao = marcador_linha[posicao_4+1:posicao_5]

            jogador = marcador_linha[:posicao_4-1]

            dados_linha_tempo.append([tipo_evento, '', minuto_evento.text, jogador, selecao, partida, info_partida, info_copa, ano, sede_copa])
        
        
tabela = pd.DataFrame(dados_linha_tempo, columns=['tipo_evento', 'complemento_evento', 'minuto', 'jogador', 'selecao', 'partida', 'infos', 'copa', 'ano', 'sede_copa'])
tabela.to_excel('dados_linha_tempo.xlsx', index=False)
print('fim do codigo')
